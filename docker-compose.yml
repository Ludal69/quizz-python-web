services:
  db:
    container_name: db_c
    image: postgres
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: backend_c
    command: >
      sh -c "pip install debugpy -t /tmp &&
             python -m debugpy --wait-for-client --listen 0.0.0.0:9229 manage.py runserver 0.0.0.0:8000 --nothreading"
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
      - "9229:9229" # Port pour le d√©bogage distant
    volumes:
      - ./backend:/app # Volume pour le hot-reload
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: frontend_c
    ports:
      - "3000:3000"
    develop:
      watch: #remplace l'option volumes (de docker-compose.yml)
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: ./frontend/package.json
    environment:
      - VUE_APP_BACKEND_URL=http://localhost:8000/api/
    command: npm run serve -- --public 0.0.0.0:8080
    networks:
      - app-network
    depends_on:
      - backend

  pgadmin:
    container_name: pgadmin_c
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - app-network
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    logging:
      driver: "none"

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  pgadmin-data:
